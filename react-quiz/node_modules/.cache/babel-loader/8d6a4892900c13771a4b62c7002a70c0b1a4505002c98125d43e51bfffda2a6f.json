{"ast":null,"code":"var _jsxFileName = \"/Users/TT/WebstormProjects/react/learn-react/react-quiz/src/components/App.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport { useEffect, useReducer } from \"react\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  index: 0\n};\n//'loading','error','ready','active','finished'\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\"\n      };\n    case \"next\":\n      return {\n        ...state,\n        index: state.index + 1\n      };\n    case \"prev\":\n      return {\n        ...state,\n        index: state.index - 1\n      };\n    default:\n      throw new Error(\"Action unknown\");\n  }\n}\nexport default function App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index,\n    answer\n  }, dispatch] = useReducer(reducer, initialState);\n  const numOfQuestions = questions.length;\n  useEffect(() => {\n    fetch(\"http://localhost:8001/questions\").then(res => res.json()).then(data => dispatch({\n      type: \"dataReceived\",\n      payload: data\n    })).catch(err => dispatch({\n      type: \"dataFailed\"\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 34\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 32\n      }, this), status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n        numOfQuestions: numOfQuestions,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(Question, {\n        question: questions[index],\n        dispatch: dispatch,\n        answer: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kXpLnrk81hgcAal0QsMZAWZa5To=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","useEffect","useReducer","Loader","Error","StartScreen","Question","jsxDEV","_jsxDEV","initialState","questions","status","index","reducer","state","action","type","payload","App","_s","answer","dispatch","numOfQuestions","length","fetch","then","res","json","data","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","_c","$RefreshReg$"],"sources":["/Users/TT/WebstormProjects/react/learn-react/react-quiz/src/components/App.js"],"sourcesContent":["import Header from \"./Header\";\nimport Main from \"./Main\";\nimport { useEffect, useReducer } from \"react\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\n\nconst initialState = { questions: [], status: \"loading\", index: 0 };\n//'loading','error','ready','active','finished'\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\",\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\",\n      };\n\n    case \"start\":\n      return { ...state, status: \"active\" };\n    case \"next\":\n      return { ...state, index: state.index + 1 };\n    case \"prev\":\n      return { ...state, index: state.index - 1 };\n    default:\n      throw new Error(\"Action unknown\");\n  }\n}\n\nexport default function App() {\n  const [{ questions, status, index, answer }, dispatch] = useReducer(\n    reducer,\n    initialState,\n  );\n\n  const numOfQuestions = questions.length;\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/questions\")\n      .then((res) => res.json())\n      .then((data) => dispatch({ type: \"dataReceived\", payload: data }))\n      .catch((err) => dispatch({ type: \"dataFailed\" }));\n  }, []);\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main>\n        {status === \"loading\" && <Loader />}\n        {status === \"error\" && <Error />}\n        {status === \"ready\" && (\n          <StartScreen numOfQuestions={numOfQuestions} dispatch={dispatch} />\n        )}\n        {status === \"active\" && (\n          <Question\n            question={questions[index]}\n            dispatch={dispatch}\n            answer={answer}\n          />\n        )}\n      </Main>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAG;EAAEC,SAAS,EAAE,EAAE;EAAEC,MAAM,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAE,CAAC;AACnE;AACA,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QACL,GAAGF,KAAK;QACRJ,SAAS,EAAEK,MAAM,CAACE,OAAO;QACzBN,MAAM,EAAE;MACV,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGG,KAAK;QACRH,MAAM,EAAE;MACV,CAAC;IAEH,KAAK,OAAO;MACV,OAAO;QAAE,GAAGG,KAAK;QAAEH,MAAM,EAAE;MAAS,CAAC;IACvC,KAAK,MAAM;MACT,OAAO;QAAE,GAAGG,KAAK;QAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;MAAE,CAAC;IAC7C,KAAK,MAAM;MACT,OAAO;QAAE,GAAGE,KAAK;QAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;MAAE,CAAC;IAC7C;MACE,MAAM,IAAIR,KAAK,CAAC,gBAAgB,CAAC;EACrC;AACF;AAEA,eAAe,SAASc,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAAC;IAAET,SAAS;IAAEC,MAAM;IAAEC,KAAK;IAAEQ;EAAO,CAAC,EAAEC,QAAQ,CAAC,GAAGnB,UAAU,CACjEW,OAAO,EACPJ,YACF,CAAC;EAED,MAAMa,cAAc,GAAGZ,SAAS,CAACa,MAAM;EAEvCtB,SAAS,CAAC,MAAM;IACduB,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,QAAQ,CAAC;MAAEL,IAAI,EAAE,cAAc;MAAEC,OAAO,EAAEW;IAAK,CAAC,CAAC,CAAC,CACjEC,KAAK,CAAEC,GAAG,IAAKT,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAa,CAAC,CAAC,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EACN,oBACER,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxB,OAAA,CAACT,MAAM;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5B,OAAA,CAACR,IAAI;MAAAgC,QAAA,GACFrB,MAAM,KAAK,SAAS,iBAAIH,OAAA,CAACL,MAAM;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAClCzB,MAAM,KAAK,OAAO,iBAAIH,OAAA,CAACJ,KAAK;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC/BzB,MAAM,KAAK,OAAO,iBACjBH,OAAA,CAACH,WAAW;QAACiB,cAAc,EAAEA,cAAe;QAACD,QAAQ,EAAEA;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACnE,EACAzB,MAAM,KAAK,QAAQ,iBAClBH,OAAA,CAACF,QAAQ;QACP+B,QAAQ,EAAE3B,SAAS,CAACE,KAAK,CAAE;QAC3BS,QAAQ,EAAEA,QAAS;QACnBD,MAAM,EAAEA;MAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjB,EAAA,CAjCuBD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}